apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'de.mannodermaus.android-junit5'

dependencies {
    // Android Support
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation "androidx.cardview:cardview:$card_view_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.preference:preference-ktx:$preference_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extension_version"

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.collection:collection-ktx:$collection_version"
    implementation "androidx.browser:browser:$browser_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_jdk_libs_version"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // koin
    implementation "io.insert-koin:koin-android:$koin_version"

    // Geocaching API
    api project(":geocaching-api")

    // Locus API
    implementation "com.asamm:locus-api-android:$locus_api_version"

    // Logging API
    implementation "com.arcao:slf4j-timber:$slf4jtimber_version"
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Material dialogs
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:input:$material_dialogs_version"

    // Crashlytics & Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Networking
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
}

android {
    namespace 'com.arcao.geocaching4locus'

    compileSdkVersion rootProject.compile_sdk_version

    defaultConfig {
        applicationId 'com.arcao.geocaching4locus'
        archivesBaseName = parent.name

        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version

        versionName rootProject.version_name
        versionCode hasProperty('devBuild') ? 1 : gitVersionCode()

        multiDexEnabled true

        aaptOptions {
            cruncherEnabled = false
        }

        buildConfigField 'String', 'GIT_SHA', 'null'
        buildConfigField 'String', 'BUILD_TIME', 'null'
        buildConfigField 'String', 'GEOCACHING_API_KEY', "\"${geocachingApiKey}\""
        buildConfigField 'String', 'GEOCACHING_API_SECRET', "\"${geocachingApiSecret}\""
        buildConfigField 'boolean', 'GEOCACHING_API_STAGING', "${geocachingApiStaging}"

        buildConfigField 'String', 'TEST_USER', 'null'
        buildConfigField 'String', 'TEST_PASSWORD', 'null'
        resConfigs 'en', 'cs', 'de', 'es', 'fr', 'nl', 'no', 'pl', 'sk'

    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        freeCompilerArgs += [
                "-opt-in=kotlin.RequiresOptIn",
                "-Xjvm-default=all-compatibility"
        ]
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding = true
    }

    signingConfigs {
        release {
            keyAlias = 'geocaching4locus'
        }
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            versionNameSuffix '-dev'
            crunchPngs false

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            versionNameSuffix ''

            buildConfigField 'String', 'GIT_SHA', '"' + gitSha() + '"'
            buildConfigField 'String', 'BUILD_TIME', '"' + gitTimestamp() + '"'

            signingConfig signingConfigs.release
            minifyEnabled false
            // App crash on VerifyError on Android 4.2, 4.3; https://issuetracker.google.com/issues/134304597
            shrinkResources false
            crunchPngs false

            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles fileTree(dir: 'proguard-rules', include: '*.pro').getFiles().toArray()
        }
    }
    packagingOptions {
        resources {
            excludes += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/LICENSE',
                    'META-INF/atomicfu.kotlin_module',
                    'org/apache/http/version.properties',
                    'templates/release-notes.vm',
                    'log4j.xml'
            ]
        }
    }

    lint {
        abortOnError false
    }
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}

apply plugin: 'com.google.gms.google-services'
