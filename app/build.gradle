apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

dependencies {
    def supportVer = '26.0.0'

    // support libraries
    //noinspection GradleCompatible
    implementation "com.android.support:support-v4:$supportVer"
    implementation "com.android.support:appcompat-v7:$supportVer"
    implementation "com.android.support:recyclerview-v7:$supportVer"
    implementation "com.android.support:cardview-v7:$supportVer"
    implementation "com.android.support:design:$supportVer"

    // from maven.arcao.com repository
    implementation('com.arcao:geocaching-api:2.0.1') {
        // Not working in Android, slf4j-timber used instead
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    // Locus API
    implementation 'com.asamm:locus-api-android:0.2.10'

    // Logging API
    implementation 'com.arcao:slf4j-timber:3.0'
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Apache commons
    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'commons-io:commons-io:2.5'

    // ScribeJava
    implementation 'com.github.scribejava:scribejava-core:4.2.0'
    implementation 'com.github.scribejava:scribejava-httpclient-okhttp:4.2.0'

    implementation 'com.afollestad.material-dialogs:core:0.9.4.5'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.6.8'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'

    // Annotation processor dependencies
    implementation 'com.jakewharton:butterknife:8.8.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.0'

    compileOnly 'com.google.auto.value:auto-value:1.4.1'
    annotationProcessor 'com.google.auto.value:auto-value:1.4.1'

    implementation 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.5'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.1'

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries preDexEnabled && !isTravis
    }

    defaultConfig {
        minSdkVersion hasProperty('devBuild') ? 26 : 15
        targetSdkVersion 26
        versionCode gitVersionCode()
        buildConfigField 'String', 'GIT_SHA', '"' + gitSha() +'"'
        buildConfigField 'String', 'BUILD_TIME', '"' + gitTimestamp() + '"'
        buildConfigField 'String', 'GEOCACHING_API_KEY', "\"${geocachingApiKey}\""
        buildConfigField 'String', 'GEOCACHING_API_SECRET', "\"${geocachingApiSecret}\""
        buildConfigField 'boolean', 'GEOCACHING_API_STAGING', "${geocachingApiStaging}"

        resConfigs 'en', 'cs', 'da', 'de', 'es', 'fr', 'hr', 'it', 'nl', 'pl', 'pt', 'ru', 'sk', 'uk', 'zh', 'zh-rTW'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                    // TODO remove when http://b.android.com/187527 is supported by ButterKnife.
                    'butterknife.minSdk': getMinSdkVersion().getApiString()
                ]
            }
        }
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias = 'geocaching4locus'
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            versionNameSuffix '-dev'
        }
        release {
            versionNameSuffix ''

            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'org/apache/http/version.properties'
        exclude 'templates/release-notes.vm'
        exclude 'log4j.xml'
    }
    lintOptions { abortOnError false }
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}