apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

dependencies {
    // Android Support
    implementation Deps.androidx_appcompat
    implementation Deps.androidx_recyclerview
    implementation Deps.androidx_cardview
    implementation Deps.material_design
    implementation Deps.androidx_constraint_layout
    implementation Deps.androidx_preference

    implementation Deps.androidx_lifecycle_viewmodel
    implementation Deps.androidx_lifecycle_livedata
    implementation Deps.androidx_lifecycle_extension

    implementation Deps.androidx_ktx_core
    implementation Deps.androidx_ktx_collection
    implementation Deps.androidx_ktx_fragment
    implementation Deps.androidx_ktx_lifecycle_vm

    implementation Deps.multidex

    kapt Deps.android_databinding_compiler

    // kotlin
    implementation Deps.kotlin_stdlib
    implementation Deps.kotlin_coroutines_core
    implementation Deps.kotlin_coroutines_android

    // koin
    implementation Deps.koin_android
    implementation Deps.koin_androidx_viewmodel
    implementation Deps.koin_androidx_scope

    // Geocaching API
    implementation(Deps.geocaching_api) {
        // Not working in Android, slf4j-timber used instead
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.jetbrains', module: 'annotations-java5'
    }

    // Locus API
    implementation Deps.locus_api_android

    // Logging API
    implementation Deps.slf4j_timber
    implementation Deps.timber

    // Apache commons
    implementation Deps.commons_lang3
    implementation Deps.commons_collections4

    // ScribeJava
    implementation Deps.scribejava_core
    implementation Deps.scribejava_httpclient_okhttp

    // Material dialogs
    implementation(Deps.material_dialogs) {
        //exclude group: 'com.android.support', module: 'support-v13'
    }

    // Crashlytics & Firebase
    implementation Deps.firebase_core
    implementation Deps.crashlytics

    // Networking
    implementation Deps.okhttp

    // ButterKnife
    implementation Deps.butterknife
    kapt Deps.butterknife_compiler

    // Auto-Value
    implementation Deps.auto_value_annotations
    annotationProcessor Deps.auto_value

    // Auto-Value Parcelable
    implementation Deps.auto_value_parcel_adapter
    annotationProcessor Deps.auto_value_parcel
}

android {
    compileSdkVersion Versions.compile_sdk

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries preDexEnabled && !isTravis
    }

    defaultConfig {
        archivesBaseName = parent.name

        minSdkVersion Versions.min_sdk
        targetSdkVersion Versions.target_sdk

        versionCode hasProperty('devBuild') ? 1 : gitVersionCode()

        multiDexEnabled true

        aaptOptions.cruncherEnabled = false

        buildConfigField 'String', 'GIT_SHA', 'null'
        buildConfigField 'String', 'BUILD_TIME', 'null'
        buildConfigField 'String', 'GEOCACHING_API_KEY', "\"${geocachingApiKey}\""
        buildConfigField 'String', 'GEOCACHING_API_SECRET', "\"${geocachingApiSecret}\""
        buildConfigField 'boolean', 'GEOCACHING_API_STAGING', "${geocachingApiStaging}"

        buildConfigField 'String', 'TEST_USER', 'null'
        buildConfigField 'String', 'TEST_PASSWORD', 'null'

        resConfigs 'en', 'cs', 'da', 'de', 'es', 'fr', 'hr', 'it', 'nl', 'pl', 'pt', 'ru', 'sk', 'uk', 'zh', 'zh-rTW'
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            keyAlias = 'geocaching4locus'
        }
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            versionNameSuffix '-dev'
            crunchPngs false
        }
        release {
            versionNameSuffix ''

            buildConfigField 'String', 'GIT_SHA', '"' + gitSha() +'"'
            buildConfigField 'String', 'BUILD_TIME', '"' + gitTimestamp() + '"'

            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            crunchPngs false

            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles fileTree(dir: 'proguard-rules', include: '*.pro').getFiles().toArray()
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'org/apache/http/version.properties'
        exclude 'templates/release-notes.vm'
        exclude 'log4j.xml'
    }
    lintOptions { abortOnError false }
}

androidExtensions {
    experimental = true
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}

apply plugin: 'com.google.gms.google-services'